%% Δοκιμή για το μητρώο (α): toeplitz([4, -1, zeros(1,n-2)])
%%test_tridReduct_1084516.m
% Επιλογή τιμών n = 2^8 και n = 2^10
for n = [256, 1024]
    % Κατασκευή του τριδιαγώνιου μητρώου σε μορφή LAPACK:
    A_band = zeros(3, n);
    A_band(2,:) = 4;             % κύρια διαγώνιος
    A_band(1,2:end) = -1;         % υπερδιαγώνιος
    A_band(3,1:end-1) = -1;       % υποδιαγώνιος

    % Δημιουργία πλήρους μητρώου για έλεγχο (χρησιμοποιώντας την εντολή toeplitz):
    A_full = toeplitz([4, -1, zeros(1, n-2)]);
    
    % Κατασκευή δεξιού μέλους για 1 και 10 δεξιά μέλη:
    B1 = A_full * ones(n, 1);           % 1 δεξί μέλος
    B10 = A_full * tril(ones(n, 10));     % 10 δεξιά μέλη

    % Επίλυση με τη δική μας συνάρτηση:
    x1_my = tridReduct_1084516(A_band, B1);
    x10_my = tridReduct_1084516(A_band, B10);

    % Επίλυση με τον MATLAB επιλυτή (backslash):
    x1_matlab = A_full \ B1;
    x10_matlab = A_full \ B10;

    % Έλεγχος απόλυτης διαφοράς (νόρμα μέγιστου)
    diff1 = norm(x1_my - x1_matlab, inf);
    diff10 = norm(x10_my - x10_matlab, inf);
    
    % Υπολογισμός θεωρητικής ανοχής: O(κ(A_full)eps)
    condA = condest(A_full);
    tol = condA * eps;
    
    fprintf('Μητρώο (α) με n = %d:\n', n);
    fprintf('  Μέγιστη διαφορά για 1 δεξί μέλος: %.2e\n', diff1);
    fprintf('  Μέγιστη διαφορά για 10 δεξιά μέλη: %.2e\n', diff10);
    fprintf('  cond(A) = %.2e, tol = cond(A)*eps = %.2e\n', condA, tol);
    
    if diff1 > tol
        fprintf('  Προειδοποίηση: Η διαφορά για 1 δεξί μέλος είναι μεγάλη. Ο κώδικάς σας δεν λειτουργεί σωστά.\n');
    else
        fprintf('  Ο κώδικάς σας λειτουργεί σωστά για 1 δεξί μέλος.\n');
    end
    
    if diff10 > tol
        fprintf('  Προειδοποίηση: Η διαφορά για 10 δεξιά μέλη είναι μεγάλη. Ο κώδικάς σας δεν λειτουργεί σωστά.\n');
    else
        fprintf('  Ο κώδικάς σας λειτουργεί σωστά για 10 δεξιά μέλη.\n');
    end
    fprintf('\n');
end

%% Δοκιμή για το μητρώο (β)
% Το μητρώο έχει διαστάσεις 2n×2n με τα χαρακτηριστικά:
%  - Υπο- και υπερδιαγώνιο: 1
%  - Κύρια διαγώνιος: πρώτα n στοιχεία από n έως 1, και επόμενα n από 1 έως 2n.
for n = [16, 256]  % n = 2^4 και n = 2^8
    N = 2 * n;
    A_band = zeros(3, N);
    % Κατασκευή κύριας διαγωνίου:
    A_band(2, 1:n) = linspace(n, 1, n);       % από n έως 1
    A_band(2, n+1:N) = linspace(1, 2*n, n);     % από 1 έως 2n
    % Κατασκευή υπερδιαγώνιος:
    A_band(1, 2:N) = 1;
    % Κατασκευή υποδιαγώνιος:
    A_band(3, 1:N-1) = 1;

    % Δημιουργία πλήρους μητρώου για έλεγχο:
    % Χρησιμοποιούμε τη συνάρτηση spdiags για την κατασκευή τριδιαγώνιου μητρώου
    A_full = spdiags(ones(N,1)*[1 0 1], [-1 0 1], N, N);
    % Εισαγωγή της ειδικής κύριας διαγωνίου:
    main_diag = [linspace(n, 1, n), linspace(1, 2*n, n)]';
    A_full = spdiags(main_diag, 0, A_full);

    % Κατασκευή δεξιού μέλους για 1 και 10 δεξιά μέλη:
    B1 = A_full * ones(N, 1);           % 1 δεξί μέλος
    B10 = A_full * tril(ones(N, 10));     % 10 δεξιά μέλη

    % Επίλυση με τη δική μας συνάρτηση:
    x1_my = tridReduct_1084516(A_band, B1);
    x10_my = tridReduct_1084516(A_band, B10);

    % Επίλυση με τον MATLAB επιλυτή (backslash):
    x1_matlab = A_full \ B1;
    x10_matlab = A_full \ B10;

    % Έλεγχος απόλυτης διαφοράς (νόρμα μέγιστου)
    diff1 = norm(x1_my - x1_matlab, inf);
    diff10 = norm(x10_my - x10_matlab, inf);
    
    % Υπολογισμός θεωρητικής ανοχής: O(κ(A_full)eps)
    condA = condest(A_full);
    tol = condA * eps;
    
    fprintf('Μητρώο (β) με n = %d (N = %d):\n', n, N);
    fprintf('  Μέγιστη διαφορά για 1 δεξί μέλος: %.2e\n', diff1);
    fprintf('  Μέγιστη διαφορά για 10 δεξιά μέλη: %.2e\n', diff10);
    fprintf('  cond(A) = %.2e, tol = cond(A)*eps = %.2e\n', condA, tol);
    
    if diff1 > tol
        fprintf('  Προειδοποίηση: Η διαφορά για 1 δεξί μέλος είναι μεγάλη. Ο κώδικάς σας δεν λειτουργεί σωστά.\n');
    else
        fprintf('  Ο κώδικάς σας λειτουργεί σωστά για 1 δεξί μέλος.\n');
    end
    
    if diff10 > tol
        fprintf('  Προειδοποίηση: Η διαφορά για 10 δεξιά μέλη είναι μεγάλη. Ο κώδικάς σας δεν λειτουργεί σωστά.\n');
    else
        fprintf('  Ο κώδικάς σας λειτουργεί σωστά για 10 δεξιά μέλη.\n');
    end
    fprintf('\n');
end